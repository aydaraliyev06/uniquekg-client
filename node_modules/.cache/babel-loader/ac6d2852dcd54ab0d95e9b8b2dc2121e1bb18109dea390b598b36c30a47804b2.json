{"ast":null,"code":"var _jsxFileName = \"C:\\\\VScode\\\\RC\\\\uniquekg\\\\frontend\\\\src\\\\components\\\\BrandBar.jsx\",\n  _s = $RefreshSig$();\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext, useState } from 'react';\nimport { Context } from '../index';\nimport './TypeBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrandBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const [carBrand, setCarBrand] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    style: {\n      width: '157px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary\",\n      onClick: () => setCarBrand(!carBrand),\n      children: \"\\u0411\\u0440\\u0435\\u043D\\u0434\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), device.brands.map(brand => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: carBrand ? 'on' : 'off',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => device.setSelectedBrand(brand),\n        style: {\n          width: '157px',\n          cursor: 'pointer'\n        },\n        className: brand.id === device.selectedBrand.id ? 'd-flex justify-content-center text-decoration-none p-2  border fs-7 bg-primary text-light' : 'd-flex justify-content-center text-decoration-none p-2 border fs-7 text-dark',\n        children: brand.name\n      }, brand.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}, \"3CYFI1ao0MYpjuiApw8i5aAmDx0=\")), \"3CYFI1ao0MYpjuiApw8i5aAmDx0=\");\n_c2 = BrandBar;\nexport default BrandBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"BrandBar$observer\");\n$RefreshReg$(_c2, \"BrandBar\");","map":{"version":3,"names":["observer","React","useContext","useState","Context","jsxDEV","_jsxDEV","BrandBar","_s","_c","device","carBrand","setCarBrand","className","style","width","children","type","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","brands","map","brand","id","setSelectedBrand","cursor","selectedBrand","name","_c2","$RefreshReg$"],"sources":["C:/VScode/RC/uniquekg/frontend/src/components/BrandBar.jsx"],"sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Context } from '../index';\r\nimport './TypeBar.css';\r\n\r\nconst BrandBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    const [carBrand, setCarBrand] = useState(false)\r\n\r\n    return (\r\n        <div className='dropdown' style={{width:'157px'}}>\r\n            <button type=\"button\" class=\"btn btn-secondary\" onClick={()=>setCarBrand(!carBrand)}>Бренды</button>\r\n            {device.brands.map(brand =>\r\n            <div id={carBrand ? 'on' : 'off'}>\r\n                <div \r\n                    key={brand.id}\r\n                    \r\n                    onClick={()=>device.setSelectedBrand(brand)}\r\n                    style={{width:'157px', cursor:'pointer'}}\r\n                    className={brand.id === device.selectedBrand.id ? \r\n                        'd-flex justify-content-center text-decoration-none p-2  border fs-7 bg-primary text-light' \r\n                        : \r\n                        'd-flex justify-content-center text-decoration-none p-2 border fs-7 text-dark'}\r\n                >\r\n                    {brand.name}\r\n                </div>\r\n            </div> \r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default BrandBar;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC5B,MAAM;IAACE;EAAM,CAAC,GAAGR,UAAU,CAACE,OAAO,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACIG,OAAA;IAAKO,SAAS,EAAC,UAAU;IAACC,KAAK,EAAE;MAACC,KAAK,EAAC;IAAO,CAAE;IAAAC,QAAA,gBAC7CV,OAAA;MAAQW,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC,mBAAmB;MAACC,OAAO,EAAEA,CAAA,KAAIP,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAK,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnGb,MAAM,CAACc,MAAM,CAACC,GAAG,CAACC,KAAK,iBACxBpB,OAAA;MAAKqB,EAAE,EAAEhB,QAAQ,GAAG,IAAI,GAAG,KAAM;MAAAK,QAAA,eAC7BV,OAAA;QAGIa,OAAO,EAAEA,CAAA,KAAIT,MAAM,CAACkB,gBAAgB,CAACF,KAAK,CAAE;QAC5CZ,KAAK,EAAE;UAACC,KAAK,EAAC,OAAO;UAAEc,MAAM,EAAC;QAAS,CAAE;QACzChB,SAAS,EAAEa,KAAK,CAACC,EAAE,KAAKjB,MAAM,CAACoB,aAAa,CAACH,EAAE,GAC3C,2FAA2F,GAE3F,8EAA+E;QAAAX,QAAA,EAElFU,KAAK,CAACK;MAAI,GATNL,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC,kCAAC;AAACS,GAAA,GAzBGzB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}